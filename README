NHibernate.Dynamic includes a dynamic repository base class which makes it
possible to perform dynamic, rails style, queries.

For example, if you want to load all parents with a given name with their children loaded:

var parents = _repository.GetByNameWithChildren("Name");

If you want to load a single entity, you can specify an id as the first parameter:

var parent = _repository.GetWithChildrenLoaded(1);

or you can use GetOne instead of the Get prefix:

var parent = _repository.GetOneByName("Name");

Multiple relationships and filters can be combined with and:

var parent = _repository.GetByNameAndAddressWithChildrenAndGrandParent("Name", "Address");


The code is very crude and quite simplistic. There are a number of performance
optimizations to make, so the number of queries is sub-optimal, but you'll get
the data you asked for.
